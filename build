#!/usr/env bash

# This script builds the debian package for this project. It should
# be run from the root of the project directory.

# Usage: bash build

set -eo pipefail

function output () { echo "${@}" >&2 ; }

function debPackage () {
    output "Building debian package [${_themeName}]."

    test -d dist || mkdir -p dist/{DEBIAN,usr/grub/themes/"${_themeName}"}

    dpkg-changelog

    output "Copying files to dist directory."  ; output ""
    cp -av debian/* dist/DEBIAN/
    cp -av ./{fonts,icons,images,theme.txt} dist/usr/grub/themes/"${_themeName}"/

    cp -av COPYING dist/usr/grub/themes/"${_themeName}"/copyright
    cp -av doc/* dist/usr/grub/themes/"${_themeName}"/

    output "Setting package version in control file."

    while IFS= read -r line; do
        case "${line}" in
            "Version:"              ) echo "Version: $(cat doc/version)" ;;
            "Maintainer:"           ) echo "Maintainer: ${_packageMaintainer}" ;;
            "Homepage:"             ) echo "Homepage: ${_packageHomepage}" ;;
            *) echo "${line}" ;;
        esac
    done < dist/DEBIAN/control > dist/DEBIAN/control.tmp

    mv dist/DEBIAN/control.tmp dist/DEBIAN/control || { output "Error: Failed to update control file." ; exit 1 ; }

    cd dist || { output "Error: Failed to change directory to dist." ; exit 1 ; }

    # Use loop to calculate the md5sum of each file
    find . -type f | while read -r file ; do

        md5sum "${file}" >> "DEBIAN/md5sums"
        # Do not include the DEBIAN directory in the md5sums file
        sed -i '/.\/DEBIAN/d' "DEBIAN/md5sums"
        # Remove the leading " ./" without removing the other "/" in the file path
        sed -i 's/ .\///' "DEBIAN/md5sums"

    done

    cd ../

    # Get the size of each directory in th out folder.
    TOTAL_SIZE="$(find dist/ -type d -exec du -s {} + | sort -n | awk '{print $1}')"
    FIXED_SIZE="$(( TOTAL_SIZE - $(du -s dist/DEBIAN | awk '{print $1}') ))"

    sed -i "s/Installed-Size:/Installed-Size: ${FIXED_SIZE}/" dist/DEBIAN/control

    dpkg-deb --root-owner-group --build dist "${_packageName}_${_buildVersion}"_all.deb
    test "${?}" -eq "0" || { output "ERROR: failed to build package" ; exit 1 ; }

}

_packageName="$(grep '^Package:' debian/control | awk '{print $2}')"
_packageMaintainer="$(git config user.name) <$(git config user.email)>"
_packageHomepage="https://github.com/MichaelSchaecher/grub-themes-polkadots-dark"

# Get the current commit hash and the current branch name
_buildCommit="$(git rev-parse --short HEAD)"
_buildVersion="$(cat doc/version)-${_buildCommit}"

_themeName="polka-dots_dark"

case "${1}" in
    dpkg            ) debPackage                                   ;;
    clean           ) rm -rvf dist                                 ;;
    help            ) output "Usage: bash build [clean|dpkg|help]" ;;
    *               ) bash build dpkg                              ;;
esac
